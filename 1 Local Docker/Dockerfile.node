# Specifies the base image to use for the Docker image.
FROM node:16-alpine as build

# Specifies name and version
LABEL Name="Dockerfile.node" version="1.2"

# Sets the working directory for any subsequent instructions in the Dockerfile.
# Any instructions that follow will be executed relative to this directory.
WORKDIR /node_app/

# Copies package.json to image dir.
COPY ./package*.json /node_app/

# Installs the npm package manager globally.
RUN npm install -g npm@7.24.0
# Installs python3.
RUN apk add --update python3 make g++ && rm -rf /var/cache/apk/*
# Reads the package.json file in the current directory and installs all the packages listed under the dependencies field.
RUN npm install --legacy-peer-deps

# Copies remaining files in the current directory to $SERVER_HOME in the Docker image.
COPY . /node_app/

# Runs command in container to install dependencies listed in the `package.json` file.
RUN ["npm", "run", "build"]


# STAGE 2 BUILD
FROM node:16-alpine

# Specifies name and version
LABEL Name="Dockerfile.node" version="1.2"

# Sets the working directory for any subsequent instructions in the Dockerfile.
WORKDIR /node_app/
# Copies dist and node_modules.

COPY --from=build ["/node_app/", "./"]
# All ports the microservices built with this dockerfile may listen to

EXPOSE 3000 3007 4200
# Starts node application.
CMD ["npm","start"]