version: "3.11"

x-variables: &variables
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}
  DB_NAME: ${DB_NAME}
  APP_SERVICE_HOST: host.docker.internal
  ENCRYPT_SECRET_KEY: ${ENCRYPT_SECRET_KEY}
  JWT_SECRET_KEY: ${JWT_SECRET_KEY}

x-react-variables: &react-variables
  REACT_APP_API: http://gateway:${GATEWAY_PORT}/api

services:
  # Database
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ${DB_VOLUME}:/var/lib/mysql
    ports:
      - ${DB_PORT}:${DB_PORT}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  # Node Projects
  admin:
    build:
      context: ./aline-admin-portal
      dockerfile: ../Dockerfile.node
    ports:
      - ${ADMIN_PORT}:${ADMIN_PORT}
    environment:
      <<: *react-variables
      PORT: ${ADMIN_PORT}
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  dashboard:
    build:
      context: ./member-dashboard
      dockerfile: ../Dockerfile.node
    ports:
      - ${DASHBOARD_PORT}:${DASHBOARD_PORT}
    environment:
      - PORT=${DASHBOARD_PORT}
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  landing:
    build:
      context: ./aline-landing-portal
      dockerfile: ../Dockerfile.node
    ports:
      - ${LANDING_PORT}:${LANDING_PORT}
    environment:
      <<: *react-variables
      PORT: ${LANDING_PORT}
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  # Maven projects
  gateway:
    build:
      context: ./aline-gateway
      dockerfile: ../Dockerfile.maven
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      <<: *variables
      APP_DIR: .
      APP_PORT: ${GATEWAY_PORT}
      TARGET: ./target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GATEWAY_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  account:
    build:
      context: ./aline-account-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${ACCOUNT_PORT}:${ACCOUNT_PORT}
    environment:
      <<: *variables
      APP_DIR: ./account-microservice
      APP_PORT: ${ACCOUNT_PORT}
      TARGET: ./aline-account-microservice/account-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  bank:
    build:
      context: ./aline-bank-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${BANK_PORT}:${BANK_PORT}
    environment:
      <<: *variables
      APP_DIR: ./bank-microservice
      APP_PORT: ${BANK_PORT}
      TARGET: /aline-bank-microservice/bank-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  card:
    build:
      context: ./aline-card-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${CARD_PORT}:${CARD_PORT}
    environment:
      <<: *variables
      APP_DIR: ./card-microservice
      APP_PORT: ${CARD_PORT}
      TARGET: /aline-card-microservice/card-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  transaction:
    build:
      context: ./aline-transaction-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${TRANSACTION_PORT}:${TRANSACTION_PORT}
    environment:
      <<: *variables
      APP_DIR: ./transaction-microservice
      APP_PORT: ${TRANSACTION_PORT}
      TARGET: /aline-transaction-microservice/transaction-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  underwriter:
    build:
      context: ./aline-underwriter-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${UNDERWRITER_PORT}:${UNDERWRITER_PORT}
    environment:
      <<: *variables
      APP_DIR: ./underwriter-microservice
      APP_PORT: ${UNDERWRITER_PORT}
      TARGET: /aline-underwriter-microservice/underwriter-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

  user:
    build:
      context: ./aline-user-microservice
      dockerfile: ../Dockerfile.maven
    depends_on:
      - mysql
    ports:
      - ${USER_PORT}:${USER_PORT}
    environment:
      <<: *variables
      APP_DIR: ./user-microservice
      APP_PORT: ${USER_PORT}
      TARGET: /aline-user-microservice/user-microservice/target
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
      restart_policy:
        condition: on-failure

volumes:
  db-data: