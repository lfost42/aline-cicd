version: "3.8"

x-aws-cluster: lf-aline-ecs
x-aws-vpc: ${AWS_VPC}
x-aws-loadbalancer: aline-network-lb

x-variables: &variables
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}
  DB_NAME: ${DB_NAME}
  ENCRYPT_SECRET_KEY: ${ENCRYPT_SECRET_KEY}
  JWT_SECRET_KEY: ${JWT_SECRET_KEY}
  APP_SERVICE_HOST: ${LOAD_BALANCER}

x-react-variables: &react-variables
  REACT_APP_MEMBER_DASHBOARD_URL: ${MEMBER}
  REACT_APP_API_BASEURL: ${LOAD_BALANCER}
  REACT_APP_API: ${LOAD_BALANCER}/api/

services:
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always

  gateway:
    image: ${REGISTRY}/lf-aline-gateway
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      APP_PORT: ${GATEWAY_PORT}
      PORTAL_LANDING: ${LANDING}
      PORTAL_DASHBOARD: ${MEMBER}
      PORTAL_ADMIN: ${ADMIN}
      APP_SERVICE_HOST: ${LOAD_BALANCER}
    restart: on-failure

  user:
    image: ${REGISTRY}/lf-aline-user-microservice
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${USER_PORT}:${USER_PORT}
    environment:
      <<: *variables
      APP_PORT: 8071
    restart: on-failure

    # 8071/swagger-ui/index.html
    # "username": "samantha_carter",
    # "password": "LtColone1!",
    # "role": "admin",
    # "firstName": "Samantha",
    # "lastName": "Carter",
    # "email": "samantha.carter@sg1.com",
    # "phone": "555-555-5555"

  account:
    image: ${REGISTRY}/lf-aline-account-microservice:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${ACCOUNT_PORT}:${ACCOUNT_PORT}
    environment:
      <<: *variables
      APP_PORT: ${ACCOUNT_PORT}
    restart: on-failure

  bank:
    image: ${REGISTRY}/lf-aline-bank-microservice:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${BANK_PORT}:${BANK_PORT}
    environment:
      <<: *variables
      APP_PORT: ${BANK_PORT}
    restart: on-failure

  card:
    image: ${REGISTRY}/lf-aline-card-microservice:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${CARD_PORT}:${CARD_PORT}
    environment:
      <<: *variables
      APP_PORT: ${CARD_PORT}
    restart: on-failure

  transaction:
    image: ${REGISTRY}/lf-aline-transaction-microservice:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${TRANSACTION_PORT}:${TRANSACTION_PORT}
    environment:
      <<: *variables
      APP_PORT: ${TRANSACTION_PORT}
    restart: on-failure

  underwriter:
    image: ${REGISTRY}/lf-aline-underwriter-microservice:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${UNDERWRITER_PORT}:${UNDERWRITER_PORT}
    environment:
      <<: *variables
      APP_PORT: ${UNDERWRITER_PORT}
    restart: on-failure

x-aws-cloudformation:
  Resources:
    GatewayTCP80TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    UserTCP8070TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    AccountTCP8072TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    BankTCP8083TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    CardTCP8084TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    TransactionTCP8073TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
    UnderwriterTCP8071TargetGroup:
      Properties:
        HealthCheckIntervalSeconds: 180
        HealthCheckTimeoutSeconds: 30
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 5
